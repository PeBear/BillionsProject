/*
 * This file is generated by jOOQ.
 */
package vn.team.system.repository.model.tables.records;


import vn.team.system.repository.model.tables.Staff;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record10<String, String, Boolean, LocalDate, String, String, String, Double, String, String> {

    private static final long serialVersionUID = 744536106;

    /**
     * Setter for <code>Personel.Staff.Id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Personel.Staff.Id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Personel.Staff.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Personel.Staff.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Personel.Staff.Gender</code>.
     */
    public void setGender(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>Personel.Staff.Gender</code>.
     */
    public Boolean getGender() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>Personel.Staff.Birthday</code>.
     */
    public void setBirthday(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>Personel.Staff.Birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>Personel.Staff.Photo</code>.
     */
    public void setPhoto(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Personel.Staff.Photo</code>.
     */
    public String getPhoto() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Personel.Staff.Email</code>.
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>Personel.Staff.Email</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Personel.Staff.Phone</code>.
     */
    public void setPhone(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Personel.Staff.Phone</code>.
     */
    public String getPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>Personel.Staff.Salary</code>.
     */
    public void setSalary(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>Personel.Staff.Salary</code>.
     */
    public Double getSalary() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>Personel.Staff.Notes</code>.
     */
    public void setNotes(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>Personel.Staff.Notes</code>.
     */
    public String getNotes() {
        return (String) get(8);
    }

    /**
     * Setter for <code>Personel.Staff.DepartId</code>.
     */
    public void setDepartid(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>Personel.Staff.DepartId</code>.
     */
    public String getDepartid() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, Boolean, LocalDate, String, String, String, Double, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, Boolean, LocalDate, String, String, String, Double, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Staff.STAFF.ID;
    }

    @Override
    public Field<String> field2() {
        return Staff.STAFF.NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return Staff.STAFF.GENDER;
    }

    @Override
    public Field<LocalDate> field4() {
        return Staff.STAFF.BIRTHDAY;
    }

    @Override
    public Field<String> field5() {
        return Staff.STAFF.PHOTO;
    }

    @Override
    public Field<String> field6() {
        return Staff.STAFF.EMAIL;
    }

    @Override
    public Field<String> field7() {
        return Staff.STAFF.PHONE;
    }

    @Override
    public Field<Double> field8() {
        return Staff.STAFF.SALARY;
    }

    @Override
    public Field<String> field9() {
        return Staff.STAFF.NOTES;
    }

    @Override
    public Field<String> field10() {
        return Staff.STAFF.DEPARTID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Boolean component3() {
        return getGender();
    }

    @Override
    public LocalDate component4() {
        return getBirthday();
    }

    @Override
    public String component5() {
        return getPhoto();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public String component7() {
        return getPhone();
    }

    @Override
    public Double component8() {
        return getSalary();
    }

    @Override
    public String component9() {
        return getNotes();
    }

    @Override
    public String component10() {
        return getDepartid();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Boolean value3() {
        return getGender();
    }

    @Override
    public LocalDate value4() {
        return getBirthday();
    }

    @Override
    public String value5() {
        return getPhoto();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public String value7() {
        return getPhone();
    }

    @Override
    public Double value8() {
        return getSalary();
    }

    @Override
    public String value9() {
        return getNotes();
    }

    @Override
    public String value10() {
        return getDepartid();
    }

    @Override
    public StaffRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public StaffRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StaffRecord value3(Boolean value) {
        setGender(value);
        return this;
    }

    @Override
    public StaffRecord value4(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public StaffRecord value5(String value) {
        setPhoto(value);
        return this;
    }

    @Override
    public StaffRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public StaffRecord value7(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public StaffRecord value8(Double value) {
        setSalary(value);
        return this;
    }

    @Override
    public StaffRecord value9(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public StaffRecord value10(String value) {
        setDepartid(value);
        return this;
    }

    @Override
    public StaffRecord values(String value1, String value2, Boolean value3, LocalDate value4, String value5, String value6, String value7, Double value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffRecord
     */
    public StaffRecord() {
        super(Staff.STAFF);
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(String id, String name, Boolean gender, LocalDate birthday, String photo, String email, String phone, Double salary, String notes, String departid) {
        super(Staff.STAFF);

        set(0, id);
        set(1, name);
        set(2, gender);
        set(3, birthday);
        set(4, photo);
        set(5, email);
        set(6, phone);
        set(7, salary);
        set(8, notes);
        set(9, departid);
    }
}
